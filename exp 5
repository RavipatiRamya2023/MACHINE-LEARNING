{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPoCVtljTm90ZkDRaYE1/Cw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wRAm4SP-LJzr","executionInfo":{"status":"ok","timestamp":1743744387410,"user_tz":-330,"elapsed":342,"user":{"displayName":"ramya ravipati","userId":"11356452001354288215"}},"outputId":"e4420675-ac86-4981-a5c7-9349ae27e106"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cross-Validation Accuracy Scores: [0.96666667 0.96666667 0.93333333 0.96666667 1.        ]\n","Mean Accuracy: 0.9666666666666668\n","Bias: 0.6645646592495834, Variance: 0.6778073059772084\n"]}],"source":["import pandas as pd\n","import numpy as np\n","from sklearn import datasets\n","from sklearn.model_selection import train_test_split, cross_val_score\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score\n","\n","# Load the Iris dataset\n","def load_iris_data():\n","    iris = datasets.load_iris()\n","    data = pd.DataFrame(data=iris.data, columns=iris.feature_names)\n","    data['target'] = iris.target\n","    return data\n","\n","# Remove duplicates\n","def remove_duplicates(data):\n","    return data.drop_duplicates()\n","\n","# Split the data into features and target\n","def split_data(data):\n","    X = data.drop(columns=['target'])\n","    y = data['target']\n","    return X, y\n","\n","# Perform cross-validation and calculate accuracy\n","def cross_validate_model(X, y):\n","    model = LogisticRegression(max_iter=200)\n","    scores = cross_val_score(model, X, y, scoring='accuracy', cv=5)\n","    return scores\n","\n","# Calculate bias and variance\n","def calculate_bias_variance(model, X, y):\n","    model.fit(X, y)\n","    predictions = model.predict(X)\n","    bias = np.mean((np.mean(predictions) - y) ** 2)\n","    variance = np.mean((predictions - np.mean(predictions)) ** 2)\n","    return bias, variance\n","\n","# Main function\n","def main():\n","    # Load and clean data\n","    data = load_iris_data()\n","    data = remove_duplicates(data)\n","\n","    # Split data\n","    X, y = split_data(data)\n","\n","    # Cross-validate model\n","    accuracy_scores = cross_validate_model(X, y)\n","    print(f'Cross-Validation Accuracy Scores: {accuracy_scores}')\n","    print(f'Mean Accuracy: {np.mean(accuracy_scores)}')\n","\n","    # Fit model on the entire dataset\n","    model = LogisticRegression(max_iter=200)\n","    model.fit(X, y)\n","\n","    # Calculate bias and variance\n","    bias, variance = calculate_bias_variance(model, X, y)\n","    print(f'Bias: {bias}, Variance: {variance}')\n","\n","# Run the program\n","if __name__ == \"__main__\":\n","    main()\n"]}]}